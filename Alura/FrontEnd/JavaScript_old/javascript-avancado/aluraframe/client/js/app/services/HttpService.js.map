{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDACKC,G,EAAK;AACf,4BAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,+BAAOH,GAAP;AACH;;;wCAEGI,G,EAAK;AAAA;;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,+BAAQC,MAAMD,GAAN,EACHE,IADG,CACE;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADF,EAEHM,IAFG,CAEE;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFF,CAAR;AAGH;;;yCA2BIJ,G,EAAKK,I,EAAM;AAAA;;AACZ,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAC,gBAAiB,kBAAlB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAKNH,IALM,CAKD;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBALC,CAAP;AAMH","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n    _handleErrors(res) {\r\n        if (!res.ok) throw new Error(res.statusText);\r\n        return res;\r\n    }\r\n    \r\n    get(url) {\r\n        // Usando XMLHttpRequest\r\n        \r\n        // return new Promise((resolve, reject) => {\r\n        //     let xhr = new XMLHttpRequest();\r\n        //     xhr.open('GET', url);\r\n\r\n        //     xhr.onreadystatechange = () => {\r\n        //         /* \r\n        //             0: requisição não foi iniciada\r\n        //             1: conexão com o servidor estabelecida\r\n        //             2: requisição recebida\r\n        //             3: processando requisição\r\n        //             4: requisição concluída e a resposta está pronta\r\n        //         */\r\n\r\n        //         if(xhr.readyState == 4) {\r\n        //             if(xhr.status == 200)\r\n        //                 resolve(JSON.parse(xhr.responseText));\r\n        //             else {\r\n        //                 console.log(xhr.responseText);\r\n        //                 reject(xhr.responseText);\r\n        //             }\r\n        //         }\r\n        //     };\r\n\r\n        //     xhr.send();\r\n        // });\r\n\r\n        // Usando FetchAPI\r\n\r\n        return  fetch(url)\r\n            .then(res => this._handleErrors(res))\r\n            .then(res => res.json());\r\n    }\r\n\r\n    // Usando XMLHttpRequest\r\n    \r\n    /* post(url, dado) {\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open(\"POST\", url, true);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n            \r\n            xhr.onreadystatechange = () => {\r\n                if (xhr.readyState == 4) {\r\n                    if (xhr.status == 200) {\r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    } else {\r\n                        reject(xhr.responseText);\r\n                    }\r\n                }\r\n            };\r\n            \r\n            xhr.send(JSON.stringify(dado));\r\n        });\r\n    }\r\n     */\r\n\r\n    // Usando FecthAPI\r\n\r\n    post(url, dado) {\r\n        return fetch(url, {\r\n            headers: {'Content-type' : 'application/json'},\r\n            method: 'post',\r\n            body: JSON.stringify(dado)\r\n        })\r\n        .then(res => this._handleErrors(res));\r\n    }\r\n}"]}