{"version":3,"sources":["../../app-es6/helpers/DateHelper.js"],"names":["DateHelper","Error","data","getDate","getMonth","getFullYear","texto","test","Date","split","map","item","indice"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;AAET,sCAAc;AAAA;;AACV,0BAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;;;;kDAEoBC,I,EAAM;AACvB,+BAAUA,KAAKC,OAAL,EAAV,UAA4BD,KAAKE,QAAL,KAAkB,CAA9C,UAAmDF,KAAKG,WAAL,EAAnD;AACH;;;kDAEoBC,K,EAAO;AACxB,4BAAI,CAAC,oDAAoDC,IAApD,CAAyDD,KAAzD,CAAL,EACI,MAAM,IAAIL,KAAJ,CAAU,wDAAV,CAAN;;AAEJ,kEAAWO,IAAX,mCAAmBF,MAAMG,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAOC,MAAP;AAAA,mCAAkBD,OAAOC,SAAS,CAAlC;AAAA,yBAArB,CAAnB;AACH","file":"DateHelper.js","sourcesContent":["export class DateHelper {\r\n\r\n    constructor() {\r\n        throw new Error('Esta classe não pode ser instanciada');\r\n    }\r\n    \r\n    static dataParaTexto(data) {\r\n        return `${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`;        \r\n    }\r\n    \r\n    static textoParaData(texto) {\r\n        if (!/([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/.test(texto))\r\n            throw new Error('\"texto\" deve ser uma data válida no formato aaaa-mm-dd');\r\n        \r\n        return new Date(...texto.split('-').map((item, indice) => item - indice % 2));\r\n    }\r\n}"]}